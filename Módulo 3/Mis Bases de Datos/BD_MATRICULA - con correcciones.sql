CREATE DATABASE BD_MATRICULA
GO

USE BD_MATRICULA;

-- ******************************* CREACIÓN DE TABLAS **********************************

CREATE TABLE CARRERAS(
	COD_CARRERA int IDENTITY,
	NOMBRE_CARRERA varchar(100) NOT NULL, 
	TOTAL_CREDITOS smallint NOT NULL, 
	GRADO varchar(14) NOT NULL DEFAULT 'BACHILLERATO'
);

CREATE TABLE ESTUDIANTES(
	CARNET varchar(6) NOT NULL, 
	ID_ESTUDIANTE varchar(20) NOT NULL,
	NOMBRE_ESTUDIANTE varchar(25) NOT NULL, 
	PRIMER_APELLIDO_E varchar(20) NOT NULL, 
	SEGUNDO_APELLIDO_E varchar(20),
	TELEFONO_ESTUDIANTE varchar(11) NOT NULL, 
	CORREO_ESTUDIANTE varchar(25), 
	FECHA_INGRESO date NOT NULL,
	ESTADO varchar(3) NOT NULL DEFAULT 'ACT',
	BORRADO_EST bit NOT NULL DEFAULT 0
);

CREATE TABLE PROFESORES(
	COD_PROFESOR int IDENTITY, 
	ID_PROFESOR varchar(15) NOT NULL, 
	NOMBRE_PROFESOR varchar(25) NOT NULL,
	PRIMER_APELLIDO_P varchar(20) NOT NULL,
	SEGUNDO_APELLIDO_P varchar(20) NOT NULL,
	TELEFONO_PROFESOR varchar(11) NOT NULL,
	CORREO_PROFESOR varchar(25) NOT NULL,
	BORRADO_PROF bit NOT NULL DEFAULT 0
);

CREATE TABLE MATERIAS(
	COD_MATERIA varchar(10) NOT NULL, 
	NOMBRE_MATERIA varchar(120) NOT NULL, 
	CREDITOS tinyint NOT NULL, 
	BORRADO_MATERIAS bit NOT NULL DEFAULT 0
);

CREATE TABLE MATERIAS_CARRERAS(
	COD_MATERIA_CARRERA int IDENTITY, 
	COD_CARRERA int NOT NULL, 
	COD_MATERIA varchar(10) NOT NULL, 
	REQUISITO varchar(10), 
	CORREQUISITO varchar(10), 
	BORRADO_MAT_CAR bit NOT NULL DEFAULT 0
);

CREATE TABLE MATERIAS_ABIERTAS(
	COD_MATERIA_ABIERTA int IDENTITY, 
	COD_MATERIA_cARRERA int NOT NULL, 
	COD_PROFESOR int NOT NULL, 
	GRUPO tinyint, 
	CUPO tinyint NOT NULL DEFAULT 30, 
	COSTO decimal(10,2), 
	PERIODO tinyint NOT NULL, 
	ANIO smallint NOT NULL, 
	MAXIMO_DESCUENTO decimal(4,2)
);

CREATE TABLE HORARIOS(
	COD_MATERIA_ABIERTA int NOT NULL, 
	DIA varchar(1) NOT NULL, 
	HORA_INICIO time NOT NULL, 
	HORA_FIN time NOT NULL
);

CREATE TABLE MATRICULAS(
	NUM_RECIBO int IDENTITY, 
	CARNET varchar(6) NOT NULL, 
	FECHA date NOT NULL DEFAULT getDate(), 
	MONTO decimal(10,2) NOT NULL, 
	DESCUENTO decimal(10,2),
	ESTADO varchar(3) NOT NULL DEFAULT 'ACT', 
	USUARIO_MATRICULA varchar(25) NOT NULL, 
	OBSERVACIONES_MATRICULAS varchar(250)
);

CREATE TABLE DETALLE_MATRICULAS(
	NUM_RECIBO int NOT NULL, 
	COD_MATERIA_ABIERTA int NOT NULL, 
	PORCENTAJE_DESCUENTO decimal(4,2) DEFAULT 0,
	NOTA_FINAL decimal(5,2) DEFAULT 0, 
	ESTADO varchar(3) NOT NULL DEFAULT 'ACT', 
	OBSERVACIONES_DET_MATRICULAS varchar(500)
);


-- ******************************* MODIFICACIÓN DE TABLAS **********************************
/*
-- Redwin descubrió que de esta forma también sirve !

ALTER TABLE CARRERAS 
	ADD CONSTRAINT PK_CARRERAS PRIMARY KEY (COD_CARRERA),
	CONSTRAINT CHK_TOTAL_CREDITOS CHECK (TOTAL_CREDITOS > 0 AND TOTAL_CREDITOS < 1000),
	CONSTRAINT CHK_GRADO CHECK (GRADO = upper(GRADO) AND 
			GRADO IN('LICENCIATURA', 'BACHILLERATO', 'DIPLOMADO', 'MAESTRIA'));
*/ 

-- _____________ Modificaciones a la tabla: CARRERAS

ALTER TABLE CARRERAS 
	ADD CONSTRAINT PK_CARRERAS PRIMARY KEY (COD_CARRERA);

ALTER TABLE CARRERAS 
	ADD CONSTRAINT CHK_TOTAL_CREDITOS CHECK (TOTAL_CREDITOS > 0 AND TOTAL_CREDITOS < 1000);

ALTER TABLE CARRERAS 
	ADD CONSTRAINT CHK_GRADO CHECK (GRADO = upper(GRADO) AND 
			GRADO IN('LICENCIATURA', 'BACHILLERATO', 'DIPLOMADO', 'MAESTRIA'));


-- _____________ Modificaciones a la tabla: ESTUDIANTES

ALTER TABLE ESTUDIANTES 
	ADD CONSTRAINT PK_ESTUDIANTES PRIMARY KEY (CARNET);

ALTER TABLE ESTUDIANTES 
	ADD CONSTRAINT Unico_ID_Estudiante UNIQUE (ID_ESTUDIANTE);

/*
-- De esta forma no funciona, porque getDate retorna la fecha y además la hora actual:

ALTER TABLE ESTUDIANTES 
	ADD CONSTRAINT CHK_FECHA_INGRESO CHECK (FECHA_INGRESO >= getDate());
*/

-- Esta forma realiza una CONVERSIÓN para obtener solamente la fecha, si la hora:

ALTER TABLE ESTUDIANTES 
	ADD CONSTRAINT CHK_FECHA_INGRESO CHECK (FECHA_INGRESO >= CONVERT(datetime,CONVERT(varchar(10), getDate(), 103),103));
	   

ALTER TABLE ESTUDIANTES 
	ADD CONSTRAINT CHK_ESTADO_ESTUDIANTES CHECK (ESTADO = upper(ESTADO) AND
		(ESTADO = 'INA' OR ESTADO = 'ACT'));
		

-- _____________ Modificaciones a la tabla: PROFESORES

ALTER TABLE PROFESORES 
	ADD CONSTRAINT PK_PROFESORES PRIMARY KEY (COD_PROFESOR);

ALTER TABLE PROFESORES 
	ADD CONSTRAINT Unico_ID_PROFESOR UNIQUE (ID_PROFESOR);


-- _____________ Modificaciones a la tabla: MATERIAS

ALTER TABLE MATERIAS 
	ADD CONSTRAINT PK_MATERIAS PRIMARY KEY (COD_MATERIA);

ALTER TABLE MATERIAS
	ADD CONSTRAINT CHK_CREDITOS CHECK (CREDITOS >= 1 AND CREDITOS <= 11)


-- _____________ Modificaciones a la tabla: MATERIAS_CARRERAS

ALTER TABLE MATERIAS_CARRERAS
	ADD CONSTRAINT PK_MATERIAS_CARRERAS PRIMARY KEY (COD_MATERIA_CARRERA);

ALTER TABLE MATERIAS_CARRERAS
	ADD CONSTRAINT FK_MT_COD_CARRERA FOREIGN KEY (COD_CARRERA) 
		REFERENCES CARRERAS (COD_CARRERA)
			ON UPDATE NO ACTION
			ON DELETE NO ACTION;

ALTER TABLE MATERIAS_CARRERAS
	ADD CONSTRAINT FK_MT_COD_MATERIA FOREIGN KEY (COD_MATERIA) 
		REFERENCES MATERIAS (COD_MATERIA)
			ON UPDATE NO ACTION
			ON DELETE NO ACTION;

ALTER TABLE MATERIAS_CARRERAS -- EL REQUISITO ES UNA MATERIA, apunta a la tabla materias
	ADD CONSTRAINT FK_MT_REQUISITO FOREIGN KEY (REQUISITO) 
		REFERENCES MATERIAS (COD_MATERIA)
			ON UPDATE NO ACTION
			ON DELETE NO ACTION;

ALTER TABLE MATERIAS_CARRERAS -- EL CORREQUISITO ES UNA MATERIA, apunta a la tabla materias
	ADD CONSTRAINT FK_MT_CORREQUISITO FOREIGN KEY (CORREQUISITO) 
		REFERENCES MATERIAS (COD_MATERIA)
			ON UPDATE NO ACTION
			ON DELETE NO ACTION;


-- _____________ Modificaciones a la tabla: MATERIAS_ABIERTAS

ALTER TABLE MATERIAS_ABIERTAS
	ADD CONSTRAINT PK_MATERIAS_ABIERTAS PRIMARY KEY (COD_MATERIA_ABIERTA);

ALTER TABLE MATERIAS_ABIERTAS
	ADD CONSTRAINT FK_MA_COD_MATERIA_CARRERA FOREIGN KEY (COD_MATERIA_CARRERA) 
		REFERENCES MATERIAS_CARRERAS (COD_MATERIA_CARRERA)
			ON UPDATE NO ACTION
			ON DELETE NO ACTION;

ALTER TABLE MATERIAS_ABIERTAS
	ADD CONSTRAINT FK_MA_COD_PROFESOR FOREIGN KEY (COD_PROFESOR) 
		REFERENCES PROFESORES (COD_PROFESOR)
			ON UPDATE NO ACTION
			ON DELETE NO ACTION;

ALTER TABLE MATERIAS_ABIERTAS
	ADD CONSTRAINT CHK_COSTO CHECK (COSTO > 0);

ALTER TABLE MATERIAS_ABIERTAS
	ADD CONSTRAINT CHK_ANIO CHECK (ANIO >= Year(getDate()));

ALTER TABLE MATERIAS_ABIERTAS
	ADD CONSTRAINT CHK_MAXIMO_DESCUENTO CHECK (MAXIMO_DESCUENTO >= 0 AND MAXIMO_DESCUENTO < 100)


-- _____________ Modificaciones a la tabla: HORARIOS

/*
 IMPORTANTE:
	 Cuando se declara una LLAVE PRIMARIA COMPUESTA no se pueden hacer varias declaraciones, 
	 deben declararse todas en una sola RESTRICCIÓN. 
*/

-- Esto es INCORRECTO:
/*
ALTER TABLE HORARIOS
	ADD CONSTRAINT PK_HORARIOS_COD_MATERIA_ABIERTA PRIMARY KEY (COD_MATERIA_ABIERTA);

ALTER TABLE HORARIOS
	ADD CONSTRAINT PK_HORARIOS_DIA PRIMARY KEY (DIA);

ALTER TABLE HORARIOS
	ADD CONSTRAINT PK_HORARIOS_HORA_INICIO PRIMARY KEY (HORA_INICIO);

ALTER TABLE HORARIOS
	ADD CONSTRAINT PK_HORARIOS_HORA_FIN PRIMARY KEY (HORA_FIN);
*/

-- LLAVE PRIMARIA COMPUESTA: 

ALTER TABLE HORARIOS
	ADD CONSTRAINT PK_HORARIOS_COMPUESTA PRIMARY KEY (COD_MATERIA_ABIERTA, DIA, HORA_INICIO, HORA_FIN);
	   
ALTER TABLE HORARIOS
	ADD CONSTRAINT FK_COD_MATERIA_CARRERA FOREIGN KEY (COD_MATERIA_ABIERTA) 
		REFERENCES MATERIAS_ABIERTAS (COD_MATERIA_ABIERTA)
			ON UPDATE NO ACTION
			ON DELETE NO ACTION;
								   
ALTER TABLE HORARIOS
	ADD CONSTRAINT CHK_DIA_HORARIO CHECK (DIA = upper(DIA) AND
		DIA IN ('L', 'K', 'M', 'J', 'V', 'S'));


-- _____________ Modificaciones a la tabla: MATRICULAS

ALTER TABLE MATRICULAS
	ADD CONSTRAINT PK_MATRICULAS PRIMARY KEY (NUM_RECIBO);

ALTER TABLE MATRICULAS
	ADD CONSTRAINT FK_MATRICULAS_CARNET FOREIGN KEY (CARNET) 
		REFERENCES ESTUDIANTES (CARNET)
			ON UPDATE NO ACTION
			ON DELETE NO ACTION;

ALTER TABLE MATRICULAS
	ADD CONSTRAINT CHK_MONTO CHECK (MONTO >= 0);

ALTER TABLE MATRICULAS
	ADD CONSTRAINT CHK_DESCUENTO CHECK (DESCUENTO >= 0);

ALTER TABLE MATRICULAS
	ADD CONSTRAINT CHK_ESTADO_MATRICULAS CHECK (ESTADO = upper(ESTADO) AND
		ESTADO IN ('ACT', 'INA'));

-- _____________ Modificaciones a la tabla: DETALLE_MATRICULAS

-- LLAVE PRIMARIA COMPUESTA: 

ALTER TABLE DETALLE_MATRICULAS
	ADD CONSTRAINT PK_DETALLE_MATRICULAS_COMPUESTA PRIMARY KEY (NUM_RECIBO, COD_MATERIA_ABIERTA);
	

ALTER TABLE DETALLE_MATRICULAS
	ADD CONSTRAINT FK_DM_NUM_RECIBO FOREIGN KEY (NUM_RECIBO) 
		REFERENCES MATRICULAS (NUM_RECIBO)
			ON UPDATE NO ACTION
			ON DELETE NO ACTION;

ALTER TABLE DETALLE_MATRICULAS
	ADD CONSTRAINT FK_DM_COD_MATERIA_ABIERTA FOREIGN KEY (COD_MATERIA_ABIERTA) 
		REFERENCES MATERIAS_ABIERTAS (COD_MATERIA_ABIERTA)
			ON UPDATE NO ACTION
			ON DELETE NO ACTION;

ALTER TABLE DETALLE_MATRICULAS
	ADD CONSTRAINT CHK_PORCENTAJE_DESCUENTO CHECK 
		(PORCENTAJE_DESCUENTO > 0 AND PORCENTAJE_DESCUENTO < 100);

ALTER TABLE DETALLE_MATRICULAS
	ADD CONSTRAINT CHK_NOTA_FINAL CHECK 
		(NOTA_FINAL > 0 AND NOTA_FINAL <= 100);

ALTER TABLE DETALLE_MATRICULAS
	ADD CONSTRAINT CHK_ESTADO_DETALLE_MATRICULAS CHECK (ESTADO = upper(ESTADO) AND 
			ESTADO IN ('ACT', 'RET', 'APR', 'REP'));